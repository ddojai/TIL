(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{366:function(t,s,a){"use strict";a.r(s);var r=a(45),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"graph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graph"}},[t._v("#")]),t._v(" graph")]),t._v(" "),a("h2",{attrs:{id:"bfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfs"}},[t._v("#")]),t._v(" bfs")]),t._v(" "),a("ul",[a("li",[t._v("bfs는 가중치가 1일 때, 최단 거리를 구하는 알고리즘")])]),t._v(" "),a("h3",{attrs:{id:"bfs를-이용해-해결할-수-있는-문제"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfs를-이용해-해결할-수-있는-문제"}},[t._v("#")]),t._v(" bfs를 이용해 해결할 수 있는 문제")]),t._v(" "),a("ol",[a("li",[t._v("최소 비용 문제이어야 한다.")]),t._v(" "),a("li",[t._v("간선의 가중치가 1이어야 한다.")]),t._v(" "),a("li",[t._v("정점과 간선의 개수가 적어야 한다. (적다는 것은 문제의 조건에 맞춰서 해결할 수 있음을 의미)")])])])}),[],!1,null,null,null);s.default=e.exports}}]);