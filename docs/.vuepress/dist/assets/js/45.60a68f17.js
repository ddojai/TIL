(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{402:function(a,t,i){"use strict";i.r(t);var l=i(45),v=Object(l.a)({},(function(){var a=this,t=a.$createElement,i=a._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[i("h1",{attrs:{id:"jpa"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#jpa"}},[a._v("#")]),a._v(" jpa")]),a._v(" "),i("ul",[i("li",[a._v("현대의 웹 애플리케이션에서는 객체를 관계형 데이터베이스에서 관리하는 것이 중요")]),a._v(" "),i("li",[a._v("객체지향 프로그래밍 언어와 관계형 데이터베이스를 중간에서 패러다임 일치를 시켜주기 위한 기술")]),a._v(" "),i("li",[a._v("개발자는 객체지향적으로 프로그래밍을 하고, JPA가 이를 관계형 데이터베이스에 맞게 SQL을 대신 생성해서 실행")]),a._v(" "),i("li",[a._v("SQL 종속적인 개발을 하지 않아도 됨.")])]),a._v(" "),i("h2",{attrs:{id:"spring-data-jpa"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#spring-data-jpa"}},[a._v("#")]),a._v(" Spring Data JPA")]),a._v(" "),i("ul",[i("li",[a._v("JPA는 인터페이스로서 자바 표준명세서")]),a._v(" "),i("li",[a._v("구현체 : Hibernate, Eclipse, Link")]),a._v(" "),i("li",[a._v("스프링에서는 구현체들을 좀 더 쉽게 사용하고자 추상화시킨 Spring Data JPA라는 모듈을 사용\n"),i("ul",[i("li",[a._v("JPA <- Hibernate <- Spring Data JPA")])])]),a._v(" "),i("li",[a._v("Hibernate와 Spring Data JPA 를 사용하는건 큰 차이가 없음")]),a._v(" "),i("li",[a._v("등장 이유\n"),i("ul",[i("li",[a._v("구현체 교체의 용이성\n"),i("ul",[i("li",[a._v("Hibernate 외에 다른 구현체로 쉽게 교체.")]),a._v(" "),i("li",[a._v("Spring Data JPA 내부에서 구현체 매핑을 지원.")])])]),a._v(" "),i("li",[a._v("저장소 교체의 용이성\n"),i("ul",[i("li",[a._v("관계형 데이터베이스 외에 다른 저장소로 쉽게 교체")])])])])])]),a._v(" "),i("h2",{attrs:{id:"특징"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#특징"}},[a._v("#")]),a._v(" 특징")]),a._v(" "),i("ul",[i("li",[a._v("높은 러닝 커브\n"),i("ul",[i("li",[a._v("객체지향 프로그래밍과 관계형 데이터베이스 둘다 이해")])])]),a._v(" "),i("li",[a._v("CRUD 쿼리 작성 필요없음")]),a._v(" "),i("li",[a._v("부모-자식 관계 표현, 1:N 관계 표현, 상태와 행위를 한 곳에서 관리하는 등 객체지향 프로그래밍 쉽게 가능")])])])}),[],!1,null,null,null);t.default=v.exports}}]);