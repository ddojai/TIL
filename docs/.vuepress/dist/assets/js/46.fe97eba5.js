(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{403:function(a,t,e){"use strict";e.r(t);var r=e(45),v=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"layer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layer"}},[a._v("#")]),a._v(" Layer")]),a._v(" "),e("ul",[e("li",[a._v("Service에서 비지니스 로직을 처리해야 한다고 많은 사람이 오해")]),a._v(" "),e("li",[a._v("기존에 서비스로 처리하던 방식을 트랜잭션 스크립트라고 합니다.\n"),e("ul",[e("li",[a._v("모든 로직이 서비스 클래스 내부에서 처리")]),a._v(" "),e("li",[a._v("서비스 계층이 무의미하며, 객체란 단순히 데이터 덩어리 역할만 하게 됩니다.")])])]),a._v(" "),e("li",[a._v("Domain에서 비지니스 처리를 담당")]),a._v(" "),e("li",[a._v("Service는 트랜잭션과 도메인 간의 순서만 보장해 준다.")])]),a._v(" "),e("h2",{attrs:{id:"web-layer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-layer"}},[a._v("#")]),a._v(" Web Layer")]),a._v(" "),e("ul",[e("li",[a._v("흔히 사용하는 컨트롤러(@Controller)와 JSP/Freemaker 등이 뷰 템플릿 영역")]),a._v(" "),e("li",[a._v("이외에도 필터(@Filter), 인터셉터, 컨트롤러 어드바이스(@ControllerAdvice)등 외부 요청과 응답에 대한 전반적인 영역")])]),a._v(" "),e("h2",{attrs:{id:"service-layer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service-layer"}},[a._v("#")]),a._v(" Service Layer")]),a._v(" "),e("ul",[e("li",[a._v("@Sercvice에 사용되는 서비스 영역")]),a._v(" "),e("li",[a._v("일반적으로 Controller와 Dao의 중간 영역에서 사용")]),a._v(" "),e("li",[a._v("@Transaction이 사용되어야 하는 영역")])]),a._v(" "),e("h2",{attrs:{id:"repository-layer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repository-layer"}},[a._v("#")]),a._v(" Repository Layer")]),a._v(" "),e("ul",[e("li",[a._v("Database와 같이 데이터 저장소에 접근하는 영역")]),a._v(" "),e("li",[a._v("기존에 개발했던 사람들은 Dao(Data Access Object) 영역으로 이해하면 됨.")])]),a._v(" "),e("h2",{attrs:{id:"dtos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dtos"}},[a._v("#")]),a._v(" Dtos")]),a._v(" "),e("ul",[e("li",[a._v("Dto(Data Transfer Object)는 계층 간에 데이터 교환을 위한 객체. Dtos는 이들의 영역")]),a._v(" "),e("li",[a._v("예를 들어 뷰 템플릿 엔진에서 사용될 객체나 Repository Layer에서 결과로 넘겨준 객체 등이 이들을 이야기함.")])]),a._v(" "),e("h2",{attrs:{id:"domain-model"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#domain-model"}},[a._v("#")]),a._v(" Domain Model")]),a._v(" "),e("ul",[e("li",[a._v("도메인이라 불리는 개발 대상을 모든 사람이 동일한 관점에서 이해할 수 있고 공유할 수 있도록 단순화시킨 것을 도메인 모델이라 함.")]),a._v(" "),e("li",[a._v("이를테면 택시 앱이라고 하면 배차, 탑승, 요금 등이 모두 도메인이 될 수 있습니다.")]),a._v(" "),e("li",[a._v("@Entity를 사용해보신 분들은 @Entity가 사용된 영역 역시 도메인 모델이라고 이해 해주시면 됩니다.")]),a._v(" "),e("li",[a._v("다만, 무조건 데이터베이스의 테이블과 관계가 있어야만 하는 것은 아닙니다.")]),a._v(" "),e("li",[a._v("VO처럼 값 객체들도 이 영역에 해당하기 때문입니다.")])]),a._v(" "),e("h1",{attrs:{id:"출처"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#출처"}},[a._v("#")]),a._v(" 출처")]),a._v(" "),e("ul",[e("li",[a._v("스프링 부트와 aws로 혼자 구현하는 웹 서비스 CH.03")])])])}),[],!1,null,null,null);t.default=v.exports}}]);